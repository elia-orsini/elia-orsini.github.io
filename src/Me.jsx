/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame, useThree, useLoader } from '@react-three/fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Me({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/combo.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions["stretch"].play()
  })
  useFrame((state) => {
    group.current.rotation.x = -0.2598
    group.current.position.y = 0.85
    group.current.position.x = 0.30
    group.current.rotation.y = Math.PI/0.1005
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0.02, 4.83]} rotation={[Math.PI / 2, 0, 0]} scale={2.82}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.EyeLeft.geometry}
          material={nodes.EyeLeft.material}
          skeleton={nodes.EyeLeft.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.EyeRight.geometry}
          material={nodes.EyeRight.material}
          skeleton={nodes.EyeRight.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Body.geometry}
          material={nodes.Wolf3D_Body.material}
          skeleton={nodes.Wolf3D_Body.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Hair.geometry}
          material={materials.hair}
          skeleton={nodes.Wolf3D_Hair.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Head.geometry}
          material={nodes.Wolf3D_Head.material}
          skeleton={nodes.Wolf3D_Head.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
          material={nodes.Wolf3D_Outfit_Bottom.material}
          skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
          material={materials.shoes}
          skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Outfit_Top.geometry}
          material={nodes.Wolf3D_Outfit_Top.material}
          skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
        />
        <skinnedMesh castShadow receiveShadow 
          frustumCulled={false}
          geometry={nodes.Wolf3D_Teeth.geometry}
          material={nodes.Wolf3D_Teeth.material}
          skeleton={nodes.Wolf3D_Teeth.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/combo.glb')
